name: CI

on:
  push:

permissions:
  contents: write

jobs:
  build_test:
    name: Build and Test
    strategy:
      matrix:
        llvm_version: [14, 15, 16]
    runs-on: ubuntu-latest
    steps:
      - name: Setup LLVM ${{ matrix.llvm_version }}
        run: |
          if dpkg --status "clang-${{matrix.llvm_version}}"; then
            sudo apt-get install -y libclang-${{ matrix.llvm_version }}-dev
          else
            curl https://apt.llvm.org/llvm.sh | sudo bash /dev/stdin ${{ matrix.llvm_version }}
            sudo apt-get install -y libclang-${{ matrix.llvm_version }}-dev clang-tidy-${{ matrix.llvm_version }}
          fi
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-${{ matrix.llvm_version }} 999
      - uses: actions/checkout@v2
      - name: Configure
        run: |
          CC=clang-${{ matrix.llvm_version }} CXX=clang++-${{ matrix.llvm_version }} cmake -S . -B build -DCMAKE_PREFIX_PATH=/usr/lib/llvm-${{ matrix.llvm_version }}
      - name: Build
        run: |
          cmake --build build
      - name: Test
        run: |
          clang-tidy --version
          mkdir -p build/bin
          ln -s "$(which FileCheck-${{ matrix.llvm_version }})" build/bin/FileCheck
          PATH=$PWD/build/bin:$PATH ctest --test-dir build -V
      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: build-${{ matrix.llvm_version }}}
          path: build/*.so

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-14
      - uses: actions/download-artifact@v3
        with:
          name: build-15
      - uses: actions/download-artifact@v3
        with:
          name: build-16
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.so
